---
- hosts: all
  gather_facts: false

  vars:
    ansible_python_interpreter: /usr/bin/python3.8

  tasks:
    - name: set domain_name
      set_fact: 
        domain_name: Wildcard.martinlaan.be

    - name: set directories
      set_fact:
        sys_dir: /usr/syno/etc/certificate
        pkg_dir: /usr/local/etc/certificate
        stg_dir: /tmp/certs

    - name: create cert staging directory
      file:
        path: "{{ stg_dir }}"
        state: directory

    # certs from previous task
    - name: stage certs
      copy:
        src: "/home/semaphore/certs/Wildcard.martinlaan.be"
        dest: "/tmp/certs/Wildcard.martinlaan.be"
      with_items:
        - { s: "{{ domain_name }}.crt",
            d: "cert.pem" }
        - { s: "{{ domain_name }}.fullchain", 
            d: "fullchain.pem" }
        - { s: "{{ domain_name }}.key",
            d: "privkey.pem" }

    - name: read the certificate info
      shell:
        cmd: jq -r 'to_entries' {{ sys_dir }}/_archive/INFO
      register: cat_info

    - name: set cert_info
      set_fact:
        cert_info: "{{ cat_info.stdout | from_json }}"

    - name: copy staged certs to archives
      copy:
        src: "{{ stg_dir }}/"
        dest: "{{ sys_dir }}/_archive/{{ item.key }}/"
        remote_src: true
      with_items: "{{ cert_info | flatten }}"
      register: certs
      become: true
      become_user: root

    - name: copy certs for packaged services
      copy:
        src: "{{ sys_dir }}/_archive/{{ item.0.key }}/"
        dest: "{{ pkg_dir }}/{{ item.1.subscriber }}/{{ item.1.service }}/"
        remote_src: true
      loop: "{{ cert_info | subelements('value.services') }}"
      when: item.1.isPkg

    - name: copy certs for system services
      copy:
        src: "{{ sys_dir }}/_archive/{{ item.0.key }}/"
        dest: "{{ sys_dir }}/{{ item.1.subscriber }}/{{ item.1.service }}/"
        remote_src: true
      loop: "{{ cert_info | subelements('value.services') }}"
      when: not item.1.isPkg